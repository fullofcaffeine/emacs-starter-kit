(setq load-path (cons (concat dotfiles-dir "org-mode/lisp")  load-path))
(setq load-path (cons (concat dotfiles-dir "org-mode/contrib/lisp")  load-path))

;;(global-set-key "g" (find-file ""))
;Notes, ideas and other unprocessed stuff -- quickly capture from within emacs
(defun inbox ()
  (interactive)
   (find-file "~/org/gtd/GTDInbox.org")
)

;Someday Maybe
(defun someday-maybe ()
  (interactive)
  (find-file "~/org/gtd/GTDSomedayMaybe.org")
)


(global-set-key "g" (quote gtd))
(global-set-key "i" (quote inbox))
(global-set-key "s" (quote someday-maybe))
(global-set-key "c" (quote checklists))

;;a little elisp func to rgrep through all my org directory
(defun org-rgrep (REGEXP1) "Searches through all my org/PIM files" (interactive "sSearch PIM for: ") (rgrep REGEXP1 "*.org" "~/org" ))
;;bind the previous function to windows_key + o
(global-set-key [?\s-o] 'org-rgrep)
 



;; Insert immediate timestamp
  (define-key global-map (kbd "<f9>")
              '(lambda () (interactive)
              (when (eq major-mode 'org-mode)
              (org-insert-time-stamp nil t t)
              (insert "\n"))))


(setq org-agenda-custom-commands
      '(
        ("O" "Office next-actions"
         ((agenda)
          (tags-todo "OFFICE")
          )
         )

        ("H" "Office and Home Lists"
          ((agenda)
           (tags-todo "OFFICE")
           (tags-todo "HOME")
           (tags-todo "COMPUTER")
           (tags-todo "DVD")
           (tags-todo "READING")))
         
         ("D" "Daily Action List"
          (
           (agenda "" ((org-agenda-ndays 1)
                       (org-agenda-sorting-strategy
                        (quote ((agenda time-up priority-down tag-up) )))
                       (org-deadline-warning-days 0)
                       ))))
         
         )
      )

;;MOBILEORG CONF

(setq org-mobile-directory "/Volumes/orgmms")


(defun dpush nil nil (interactive) (org-mobile-push) (org-mobile-push))
(global-set-key (kbd "<f9>") 'org-mobile-push)









;;I still don't know how to format the below function well, there are
;;lots of code that don't relate with what I want to do, but
;;surprisignly, it works very well for what I want...

(defjump
   'find-wiki
   '((t                                        . "~/org/wiki/"))
   
   "/"
   "Go to the most logical model given the current location."
   '(lambda (path)
      (message (shell-command-to-string
 	       (format "ruby %sscript/generate model %s"
 		       (rinari-root)
 		       (and (string-match ".*/\\(.+?\\)\.rb" path)
 			    (match-string 1 path))))))
   'ruby-add-log-current-method)

(defjump
   'find-gtd-file
   '((t                                        . "~/org/gtd/"))
   
   "/"
   "Go to the most logical model given the current location."
   '(lambda (path)
      (message (shell-command-to-string
 	       (format "ruby %sscript/generate model %s"
 		       (rinari-root)
 		       (and (string-match ".*/\\(.+?\\)\.rb" path)
 			    (match-string 1 path))))))
   'ruby-add-log-current-method)



(global-set-key (kbd "s-w") 'find-wiki)
(global-set-key (kbd "s-g") 'find-gtd-file)


(org-add-link-type "freemind" 'org-freemind-open)

(defun org-freemind-open (file)
(let ((outbuf (get-buffer-create "*Org Shell Output*"))
(cmd (concat "freemind ~/org/maps/" (shell-quote-argument file) ".mm &")))
(with-current-buffer outbuf (erase-buffer))
(shell-command cmd outbuf outbuf)))

;;(setq org-mac-mail-account "OneLog.in")

;;import flagged mai
(defun my-mail-import ()
  (let ((org-mac-mail-account "OneLog.in"))
    (org-mac-message-insert-flagged "GTDInbox.org" "Flagged mail")))

(setq org-agenda-custom-commands
      '(("F" "Import links to flagged mail" agenda ""
         ((org-agenda-mode-hook
           (my-mail-import))))
        ("P" "List of Projects" tags ":PROJECT:"))

        )

;;
(setq org-combined-agenda-icalendar-file
      "/Library/WebServer/Documents/orgmode.ics")


 (add-hook 'org-after-save-iCalendar-file-hook
  (lambda ()
   (shell-command
    "osascript -e 'tell application \"iCal\" to reload calendars'")))

(setq org-hide-leading-stars t)


(require 'org-install)

(defun org-mobile-pullpush nil nil (org-mobile-pull)
                                    (org-mobile-push))


;;(run-at-time "00:59" 3600 'org-mobile-pullpush)





(provide 'starter-kit-orgmode)




;; on mac apple is meta
;(setq mac-command-modifier 'meta)
;(setq mac-option-modifier 'super)



(provide 'fullofcaffeine/orgmode)